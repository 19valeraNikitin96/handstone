 1)+++configure web project
2)+++add deps on spring-mvc, hibernate, mysql-driver, jstl, gson
3)+++configure hibernate
4)+++configure spring-mvc, create packages
5)+++create welcome.jsp
6)+++create WelcomeController ("/")
7)+++create table hs_user with id, login, pass, class, lvl, points and cards columns
8)+++create User entity for hs_user table
9)+++create UserDao with getByLogin, add methods
10)+++create AuthService with getByLogin, add methods
11)+++create register.jsp
12)+++create RegisterController (get, post)
13)+++create AuthController (POST)
14)+++add empty json to new user
15)+++create hs.jsp
16)+++create HSController
17)+++show in hs.jsp all user data(lvl, points, class, date of registration, money)
18)+++bug: fix problem with date of registration
19)+++in HSController add quantity of cards into model
20)+++in deck div in hs.jsp add logic to show button 'form your deck'(/deck) if deck qty is not 10
21)+++in battle div in hs.jsp show button 'form your deck'(/deck) if deck qty is not 10 and 'TO BATTLE' if 10
22)+++create hs_card table with id(int), name, about, cost, pic, isSpell, attack, defence, type, action
23)+++create entity for hs_card(Card)
24)+++create dao for hs_card(HCardDao + CDaoInt) (get(), getById(int id))
25)+++create 11 cards in db
26)+++add cards into the model in HSController
27)+++show cards in hs.jsp
28)+++create deck.jsp
29)+++create DeckController
30)+++add logic to add and remove card in deck controller
31)+++add cashing mechanism to cashing locally all cards:
 31.1)+++Create component in cache package with name CardCache with
      list of all cards inside
 31.2)+++Start timer (as static servce) witch puts in CardCache
      actual list of cards (with manual creating of HCardDao)
 31.3)+++create CacheCardDao implements CDaoInt, mark it as
      spring component and unmark HCardDao as spring component
32)+++create battle controller
33)+++create wait.jsp (waiting for opp string)
34)+++create /wait mapping in battle controller
35)create exit logic
36)+++Creatte Battle object (transcription in audio)
37)+++Create BattleCache into cache package - multithread map of all bttles
38)+++Create new battle (in BattleController) when wait list size > 1
39)redirect to battle if battleId present in deck and hs controllers
40)+++Create battle get mapping in battle controller
41)Create battle.jsp
42)add logic to inverse players when we are the second one